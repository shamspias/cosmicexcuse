name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests every Monday at 9am UTC
    - cron: '0 9 * * 1'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy
          pip install -e .

      - name: Format with black
        run: |
          black cosmicexcuse tests --check --diff

      - name: Lint with flake8
        run: |
          flake8 cosmicexcuse tests --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 cosmicexcuse tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Type check with mypy
        run: |
          mypy cosmicexcuse --ignore-missing-imports

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
        exclude:
          # Exclude Python 3.13 on Windows (if not yet supported)
          - os: windows-latest
            python-version: '3.13'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -e .

      - name: Test with pytest
        run: |
          pytest tests/ -v --cov=cosmicexcuse --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: [ lint, test ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Test installation
        run: |
          pip install dist/*.whl
          cosmicexcuse --help
          python -c "from cosmicexcuse import CosmicExcuse; print(CosmicExcuse().generate().text)"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
          pip install -e .

      - name: Security check with safety
        run: |
          safety check --json
        continue-on-error: true

      - name: Security check with bandit
        run: |
          bandit -r cosmicexcuse -f json -o bandit-report.json
        continue-on-error: true

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme
          pip install -e .

      - name: Build documentation
        run: |
          cd docs
          make html

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/_build/html/