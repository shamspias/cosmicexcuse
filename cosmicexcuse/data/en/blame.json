{
  "category": "blame",
  "language": "en",
  "version": "1.0.0",
  "excuses": [
    "intern from 2019 left a cursed comment",
    "the previous developer used tabs instead of spaces",
    "someone divided by zero in production",
    "DevOps team performed ritual sacrifice incorrectly",
    "the code review bot became vengeful",
    "Stack Overflow was wrong (impossible, but here we are)",
    "senior developer's code from 2015 awakened",
    "the architect who designed this left no documentation",
    "contractor used their own 'innovative' patterns",
    "someone deployed on a Friday",
    "the junior dev googled the wrong solution",
    "product manager changed requirements mid-sprint",
    "QA team tested the wrong branch",
    "someone forgot to update the README",
    "legacy code from the founding engineer haunts us",
    "outsourced team worked in mysterious ways",
    "the person who wrote this got promoted and left",
    "someone copy-pasted from W3Schools",
    "the team lead's pet project interfered",
    "nightshift team reversed all the day's work",
    "someone committed directly to main",
    "the database admin went rogue",
    "frontend team blamed the backend again",
    "backend team blamed the frontend again",
    "mobile team blamed everyone else",
    "someone used eval() in production",
    "the ops team didn't read the runbook",
    "security team's paranoia broke everything",
    "compliance team added impossible requirements",
    "the vendor's SDK is haunted",
    "third-party API changed without notice",
    "cloud provider had an undocumented feature",
    "open source maintainer abandoned the project",
    "someone trusted user input",
    "the pentest team was too thorough",
    "sales team promised impossible features",
    "marketing team tested in production",
    "finance team wouldn't approve the fix",
    "legal team required broken functionality",
    "the CEO's nephew 'helped' with the code",
    "someone used regex to parse HTML",
    "the full-stack developer was half-stack",
    "someone believed the documentation",
    "the agile coach made us too agile",
    "scrum master added too much ceremony",
    "product owner didn't own the product",
    "stakeholder staked too high",
    "someone used the wrong Stack Overflow answer",
    "the 10x developer created 10x the bugs",
    "remote team was in a different timeline",
    "someone coded during a full moon",
    "the rubber duck gave bad advice",
    "pair programming partner fell asleep",
    "mob programming turned into actual mob",
    "the consultant's solution expired after they left",
    "someone used machine learning where if-else would work",
    "blockchain was added unnecessarily",
    "microservices architect went too micro",
    "monolith defender went too mono",
    "someone took 'move fast and break things' literally",
    "the person who could fix this is on vacation",
    "documentation writer never ran the code",
    "someone hardcoded their personal credentials",
    "the team's coffee machine broke",
    "someone coded before coffee",
    "the standing desk was at the wrong height",
    "open office plan destroyed concentration",
    "someone's mechanical keyboard was too loud",
    "the team pet stepped on the keyboard",
    "someone's screen was in light mode",
    "dark mode enthusiast couldn't see the bug",
    "someone used Comic Sans in the UI",
    "the designer used 50 shades of gray",
    "UX researcher researched the wrong users",
    "A/B test chose option C",
    "someone took 'pixel perfect' too seriously",
    "responsive design didn't respond",
    "accessibility team made it inaccessible",
    "internationalization team lost in translation",
    "someone used floats for currency",
    "datetime programmer forgot about timezones",
    "someone cached too aggressively",
    "cache invalidation invalidated everything",
    "someone didn't name things properly",
    "off-by-one error by someone",
    "someone's regular expression was irregular",
    "the person who understood this code retired",
    "someone refactored without tests",
    "test writer didn't test the tests",
    "coverage report covered up the truth"
  ]
}