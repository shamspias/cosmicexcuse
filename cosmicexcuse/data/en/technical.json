{
  "category": "technical",
  "language": "en",
  "version": "1.0.0",
  "excuses": [
    "cache invalidation paradox",
    "Byzantine generals attacked the consensus protocol",
    "the blockchain became self-referential",
    "dependency injection caused temporal recursion",
    "the microservices formed a union",
    "REST API achieved enlightenment and became RESTLESS",
    "Docker containers escaped containment",
    "race condition won the race",
    "mutex decided to be non-exclusive",
    "singleton pattern created twins",
    "factory pattern went on strike",
    "observer pattern stopped observing",
    "the event loop got dizzy",
    "callback hell froze over",
    "promise was broken",
    "async function became too sync",
    "the thread pool ran out of thread",
    "garbage collector became a hoarder",
    "memory leak formed a memory lake",
    "stack overflow underflowed",
    "heap corruption became heap art",
    "pointer arithmetic divided by zero",
    "null reference exception took offense",
    "type coercion coerced too hard",
    "the compiler compiled the compiler",
    "linker got unlinked",
    "debugger needs debugging",
    "breakpoint broke",
    "watchpoint stopped watching",
    "the IDE became self-aware",
    "version control lost control",
    "git blame pointed at everyone",
    "merge conflict chose violence",
    "continuous integration became discontinuous",
    "deployment pipeline got clogged",
    "load balancer lost its balance",
    "reverse proxy went forward",
    "firewall caught actual fire",
    "VPN revealed PN",
    "SSL certificate got trust issues",
    "DNS propagation propagated too far",
    "CDN became too distributed",
    "database normalization went abnormal",
    "SQL injection injected NoSQL",
    "index became outdexed",
    "primary key had identity crisis",
    "foreign key got deported",
    "transaction rolled back to the stone age",
    "ACID compliance became BASIC",
    "CAP theorem chose none of the above",
    "eventual consistency became never consistent",
    "sharding cut too deep",
    "replication replicated recursively",
    "cluster got clustered",
    "node_modules achieved critical mass",
    "package manager packaged itself",
    "dependency tree became dependency forest",
    "webpack packed too tightly",
    "transpiler lost in translation",
    "minification maximized instead",
    "source map got lost",
    "hot reload became cold reload",
    "lazy loading got too lazy",
    "eager loading was overeager",
    "middleware got stuck in the middle",
    "endpoint pointed to the beginning",
    "webhook got tangled",
    "websocket unplugged",
    "long polling became infinite polling",
    "server-sent events sent themselves",
    "GraphQL query became too graphic",
    "REST endpoint couldn't rest",
    "SOAP got dirty",
    "RPC made a PRC",
    "message queue formed a circle",
    "event bus missed its stop",
    "pub-sub unsubscribed from itself",
    "stream processing hit a dam",
    "batch processing went one by one",
    "map-reduce couldn't find itself",
    "distributed tracing got lost",
    "service mesh became service mess",
    "circuit breaker short-circuited",
    "rate limiter unlimited itself",
    "retry logic gave up",
    "exponential backoff went exponential",
    "timeout timed out",
    "health check got sick",
    "liveness probe died",
    "readiness probe was never ready"
  ]
}